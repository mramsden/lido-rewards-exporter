AWSTemplateFormatVersion: 2010-09-09
Description: Lido rewards exporter application
Resources:
  LambdaZipsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: lido-rewards-exporter-source
      VersioningConfiguration:
        Status: Enabled
  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: LidoRewardsExporterLambdaBasicExecution
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Description: Fetches LIDO staking rewards and returns as a CSV download
      FunctionName: lido-rewards-exporter
      Handler: main
      Runtime: go1.x
      Role: !GetAtt FunctionRole.Arn
      Timeout: 10
      Code:
        S3Bucket: !Ref LambdaZipsBucket
        S3Key: main.zip
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: !Join ["", [{"Ref": "AWS::StackName"}, "-api"]]
  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: export
  ApiGatewayResourceGET:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: GET
      OperationName: export
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function.Arn}/invocations"
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayResourceGET
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ApiGatewayDeployment
      RestApiId: !Ref ApiGatewayRestApi
      StageName: prod
  ApiGatewayFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi.RestApiId}/*/*/*"
      FunctionName: !Ref Function
  ApiGatewayInvocationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "lambda:*"
                Resource: !GetAtt Function.Arn
Outputs:
  FunctionName:
    Value: !Ref Function
  ApiGatewayUrl:
    Value: !Sub "https://${ApiGatewayRestApi.RestApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/"
